// Mocks generated by Mockito 5.1.0 from annotations
// in movie_app/test/features/movie/data/repositories/movie_repository_imple_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:movie_app/core/network/networkInfo.dart' as _i7;
import 'package:movie_app/core/use_cases/use_cases_params_contact.dart' as _i5;
import 'package:movie_app/features/movie/data/data_sources/movie_local_data_source.dart'
    as _i6;
import 'package:movie_app/features/movie/data/data_sources/movie_remote_data_source.dart'
    as _i2;
import 'package:movie_app/features/movie/data/models/movie_model.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSource extends _i1.Mock
    implements _i2.MovieRemoteDataSource {
  MockMovieRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.MovieModel>?> getMovies(_i5.Params? params) =>
      (super.noSuchMethod(Invocation.method(#getMovies, [params]),
              returnValue: Future<List<_i4.MovieModel>?>.value())
          as _i3.Future<List<_i4.MovieModel>?>);
}

/// A class which mocks [MovieLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieLocalDataSource extends _i1.Mock
    implements _i6.MovieLocalDataSource {
  MockMovieLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.MovieModel>?> getCachedMovies(_i5.Params? params) =>
      (super.noSuchMethod(Invocation.method(#getCachedMovies, [params]),
              returnValue: Future<List<_i4.MovieModel>?>.value())
          as _i3.Future<List<_i4.MovieModel>?>);
  @override
  _i3.Future<void> cachMovies(List<_i4.MovieModel>? movies) =>
      (super.noSuchMethod(Invocation.method(#cachMovies, [movies]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
}

/// A class which mocks [NetWorkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetWorkInfo extends _i1.Mock implements _i7.NetWorkInfo {
  MockNetWorkInfo() {
    _i1.throwOnMissingStub(this);
  }
}
